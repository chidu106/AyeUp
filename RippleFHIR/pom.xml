<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ayeup</groupId>
  <artifactId>RippleFHIR</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Ripple FHIR API</name>
  <description>API</description>
  <properties>
  		<camel-version>2.16.0</camel-version>
     	<hawtio-version>1.4.50</hawtio-version>
     	<swagger-ui.version>2.1.2</swagger-ui.version>
    	<logback-version>1.1.3</logback-version>
    	<swagger.url>https://github.com/swagger-api/swagger-ui/archive</swagger.url>
    	<destDir>target/swagger-ui</destDir>
    	<jetty9-version>9.3.1-SNAPSHOT</jetty9-version>
    	<log4j-version>1.2.17</log4j-version>
		<slf4j-version>1.7.5</slf4j-version>
		<spring-frm-version>4.2.1.RELEASE</spring-frm-version>
  </properties>
  <dependencies>
  	<dependency>
    	<groupId>org.apache.camel</groupId>
      	<artifactId>camel-spring</artifactId>
      	<version>${camel-version}</version>
    </dependency>
    <dependency>
      	<groupId>org.apache.camel</groupId>
      	<artifactId>camel-servlet</artifactId>
      	<version>${camel-version}</version>
    </dependency>
	<dependency>
    	<groupId>org.apache.camel</groupId>
    	<artifactId>camel-servletlistener</artifactId>
    	<version>${camel-version}</version>
    </dependency>
    <!-- swagger api -->
    <dependency>
      	<groupId>org.apache.camel</groupId>
      	<artifactId>camel-swagger-java</artifactId>
      	<version>${camel-version}</version>
    </dependency>

    <!-- use for json binding -->
    <dependency>
      	<groupId>org.apache.camel</groupId>
      	<artifactId>camel-jackson</artifactId>
      	<version>${camel-version}</version>
    </dependency>

    <!-- we need spring web -->
    <dependency>
      	<groupId>org.springframework</groupId>
      	<artifactId>spring-web</artifactId>
      	<version>${spring-frm-version}</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback-version}</version>
    </dependency>
  
    <dependency>
			<groupId>me.fhir</groupId>
			<artifactId>fhir-dstu2</artifactId>
			<version>1.0.0.6881</version>
		</dependency>
    </dependencies>
    
    <build>
    <!-- we do not want version in the WAR name -->
    <finalName>${project.artifactId}</finalName>

    <plugins>
      <!-- Step 1. - Download Swagger UI project from GitHub -->
     <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <url>${swagger.url}</url>
                            <fromFile>v${swagger-ui.version}.tar.gz</fromFile>
                            <toFile>${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz</toFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

      <!-- Step 2. -  Decompress content and move it to target/swagger-ui folder -->
       <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Decompress archive" />
                                <gunzip src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz" />
                                <untar src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar" dest="${project.build.directory}" />
                                <echo message="moving resources" />
                                <move todir="${destDir}" overwrite="yes">
                                    <fileset dir="${project.build.directory}/swagger-ui-${swagger-ui.version}/dist" />
                                </move>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            
      <!-- Step 3. Copy Web Resources to target/classes but also to target/swagger-ui -->
       <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/webapp</directory>
                                    <filtering>false</filtering>
                                </resource>
                                <!-- Copy swagger-ui resources to classes directory to be able to use it with mvn jetty:run -->
                                <resource>
                                    <directory>${destDir}</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

      <!-- Step 4. Add Swagger-ui Resources to the WAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>src/swagger-ui-2.1.2/dist</directory>
              <includes>
                <include>**/*.*</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!-- allows running this example with mvn:jetty-run -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty9-version}</version>
                <configuration>
                    <webAppSourceDirectory>target/classes</webAppSourceDirectory>
                </configuration>
            </plugin>
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>org.codehaus.mojo</groupId>
    								<artifactId>
    									wagon-maven-plugin
    								</artifactId>
    								<versionRange>[1.0,)</versionRange>
    								<goals>
    									<goal>download-single</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
    </build>
</project>