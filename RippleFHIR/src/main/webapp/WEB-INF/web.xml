<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

  <display-name>FHIR Rest Application</display-name>
  
 
  <!-- location of Camel Spring xml files -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:camel-config.xml</param-value>
  </context-param>

  <!-- the listener that kick-starts Spring -->
   <listener>
        <listener-class>org.apache.camel.component.servletlistener.SimpleCamelServletContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

  
   <servlet>
    <display-name>Camel Http Transport Servlet</display-name>
    <servlet-name>FHIRServlet</servlet-name>
    <servlet-class>org.apache.camel.component.servlet.CamelHttpTransportServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
<servlet>
    <servlet-name>SwaggerServlet</servlet-name>
    <servlet-class>org.apache.camel.swagger.servlet.RestSwaggerServlet</servlet-class>
    <init-param>
      <!-- enable context id listing so we can list all the CamelContexts in the JVM that has REST services
           which we then will be able to show -->
      <param-name>apiContextIdListing</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <!-- we specify the base.path using relative notation, that means the actual path will be calculated at runtime as
           http://server:port/contextpath/FHIR -->
      <param-name>base.path</param-name>
      <param-value>FHIR</param-value>
    </init-param>
    <init-param>
      <!-- we specify the api.path using relative notation, that means the actual path will be calculated at runtime as
           http://server:port/contextpath/api-docs -->
      <param-name>api.path</param-name>
      <param-value>api-docs</param-value>
    </init-param>
    <init-param>
      <param-name>api.version</param-name>
      <param-value>1.2.3</param-value>
    </init-param>
    <init-param>
      <param-name>api.title</param-name>
      <param-value>User Services</param-value>
    </init-param>
    <init-param>
      <param-name>api.description</param-name>
      <param-value>Camel Rest Example with Swagger that provides an User REST service</param-value>
    </init-param>
    <init-param>
      <param-name>api.contact.name</param-name>
      <param-value>The Apache Camel team</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>FHIRServlet</servlet-name>
    <url-pattern>/FHIR/*</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>SwaggerServlet</servlet-name>
    <url-pattern>/api-docs/*</url-pattern>
  </servlet-mapping>

  <!-- define that url path for the Camel Servlet to use -->
  
  
  <!-- enable CORS filter so people can use swagger ui to browse and test the apis -->
  <filter>
    <filter-name>RestSwaggerCorsFilter</filter-name>
    <filter-class>org.apache.camel.swagger.servlet.RestSwaggerCorsFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>RestSwaggerCorsFilter</filter-name>
    <url-pattern>/api-docs/*</url-pattern>
    <url-pattern>/FHIR/*</url-pattern>
  </filter-mapping>


  </web-app>
