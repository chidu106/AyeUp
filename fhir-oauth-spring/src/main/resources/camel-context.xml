

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring-security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:camel-security="http://camel.apache.org/schema/spring-security"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.16.0.xsd
         http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security-2.16.0.xsd">

	
	
  <!-- The Policy for checking the authentication role of ADMIN -->
  <authorizationPolicy id="admin" access="ROLE_ADMIN"
                       authenticationManager="authenticationManager"
                       accessDecisionManager="accessDecisionManager"
                       xmlns="http://camel.apache.org/schema/spring-security"/>

  <!-- The Policy for checking the authentication role of USER -->
  <authorizationPolicy id="user" access="ROLE_USER"
                       xmlns="http://camel.apache.org/schema/spring-security"/>


	<bean id="outcome" class="org.ayeup.processor.operationOutcomeService" />
	<bean id="condition" class="org.jorvik.processor.Condition" />
	<bean id="patient" class="org.jorvik.processor.Patient" />

<context:annotation-config />
	 

 	
 	
  <camel:camelContext id="OAuthFHIR" xmlns="http://camel.apache.org/schema/spring">
    <!-- Catch the authorization exception and set the Access Denied message back -->
    <onException>
      <exception>org.apache.camel.CamelAuthorizationException</exception>
      <handled>
        <constant>true</constant>
      </handled>
      <to uri="bean:outcome?method=getOutcome(401,'Unauthorized'+${exception.policyId}, '')" />
    </onException>
    
    <restConfiguration component="servlet" bindingMode="off"
			contextPath="fhir-oauth-spring-security/rest" port="8080">
			<dataFormatProperty key="prettyPrint" value="true" />
	</restConfiguration>

    <rest path="/Patient" consumes="application/xml,application/json" produces="application/xml+fhir,application/xml+json">
			<description>(Demographic)</description>
			<get uri="/{_id}" >
			 	<description>Get patient by id</description>
				<param name="_id" type="path" description="The internal id of the patient (not NHS or CHI number)"
					dataType="integer" />
				<param name="_format" type="query" dataType="string" description="Response Format" required="false" defaultValue="application/json" />
				<responseMessage message="Ok" responseModel="org.ayeup.rest.OperationOutcome" />
				<route id="PatientGet">
				  <policy ref="user">
				  	
					<process ref="patient" />
					<filter>
							<simple>${body} == null</simple>
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
								<constant>404</constant>
							</setHeader>
					</filter>
				  </policy>	
				</route>
			</get>
			<get uri="/" >
				<description>Find patient</description>
				<param name="identifier" type="query" description="Usage identifier name|id, e.g. urn:fhir.nhs.uk:id/NHSNumber|9876543210"  required="false"
					dataType="integer" />
				<param name="name" type="query" description="Family or given name" required="false"
					dataType="string" />
				<param name="birthdate" type="query" description="Date of Birth" required="false"
					dataType="string" />
				<param name="phone" type="query" description="Phone number" required="false"
					dataType="string" />
				<param name="address-postalcode" type="query" description="Postcode" required="false"
					dataType="string" />
				<param name="_format" type="query" dataType="string" description="Response Format" required="false" defaultValue="application/json" />
				<responseMessage message="Ok" responseModel="org.ayeup.rest.OperationOutcome" />
				<responseMessage code="404" message="Resource not found" responseModel="org.ayeup.rest.OperationOutcome" />
				<responseMessage code="400" message="Bad Request" responseModel="org.ayeup.rest.OperationOutcome" />
				<responseMessage code="403" message="Not Authorized" responseModel="org.ayeup.rest.OperationOutcome" />
				<responseMessage code="405" message="Not Allowed" responseModel="org.ayeup.rest.OperationOutcome" />
				<responseMessage code="422" message="Unprocessable Entity" responseModel="org.ayeup.rest.OperationOutcome" />
				<route id="PatientFind">
					<policy ref="user">
						<process ref="patient" />
						<filter>
							<simple>${body} == null</simple>
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
								<constant>404</constant>
							</setHeader>
						</filter>
					</policy>
				</route>
			</get>
		</rest>
		<rest path="/Condition" consumes="application/xml,application/json" produces="application/xml+fhir,application/xml+json">
			<description>(Problem)</description>
			<get uri="/{_id}" >
			 	<description>Get condition by id</description>
				<param name="_id" type="path" description="The internal/database id of the condition"
					dataType="integer" />
				<param name="_format" type="query" dataType="string" description="Response Format" required="false" defaultValue="application/json" />
				<responseMessage message="Ok" responseModel="org.ayeup.rest.OperationOutcome" />
				<route id="ConditionGet">
				  <policy ref="user">
				  	<process ref="condition" />
					<filter>
							<simple>${body} == null</simple>
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
								<constant>404</constant>
							</setHeader>
					</filter>
				  </policy>	
				</route>
			</get>
			
		</rest>
  </camel:camelContext>

</beans>
  <!-- END SNIPPET: example -->
